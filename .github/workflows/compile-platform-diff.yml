name: Add platform manifest changes to PR
on:
  workflow_dispatch:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check-condition:
    name: Check whether workflow should run
    runs-on: ubuntu-22.04
    outputs:
      changes: ${{ steps.changes.outputs.compile-platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3

      - name: Check for file changes
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: changes
        with:
          list-files: json
          filters: .github/filters.yml

  compile-platform:
    name: Compile platform manifests and comment diff in PR
    needs:
      - check-condition
    if: needs.check-condition.outputs.changes == 'true'
    runs-on: ubuntu-22.04
    steps:
      - name: Get app token
        id: app-token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92 # v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_KEY }}

      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
        with:
          token: ${{ steps.app-token.outputs.token }}

      - name: Get tool versions
        id: tool-versions
        uses: marocchino/tool-versions-action@v1

      - name: Compile Kubernetes manifests
        uses: ./.github/actions/compile-environments
        with:
          cluster: platform
          tanka-version: ${{ steps.tool-versions.outputs.tanka }}
          helm-version: ${{ steps.tool-versions.outputs.helm }}

      - name: Get diff
        id: diff
        run: |
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "diff<<$EOF" >> $GITHUB_OUTPUT
          echo "$(git diff)" >> $GITHUB_OUTPUT
          echo "$EOF" >> $GITHUB_OUTPUT

      - name: Update PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const botComment = comments.find(comment => {
              return comment.user.type === 'Bot' && comment.body.includes('compiled platform manifests')
            });
            const output = `#### This pull request will change the compiled platform manifests as follows:
            \`\`\`
            ${{ steps.diff.outputs.diff }}
            \`\`\`
            `;
            // 3. Delete previous comment so PR timeline makes sense
            if (botComment) {
              github.rest.issues.deleteComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
              });
            }
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });
