name: "Clusters: Compile manifests"
# TODO: this currently only runs when a cluster specification is changed. It does not run when something in `lib/`
# is updated. On `lib/` update, all clusters using that library should be recompiled.
on:
  push:
    branches:
      - main
    paths:
      - clusters/**

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  detect-changes:
    name: Detect changed files
    runs-on: ubuntu-22.04
    outputs:
      changes: ${{ steps.changes.outputs.tanka }}
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3

      - name: Check for file changes
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: changes
        with:
          list-files: json
          filters: .github/filters.yml

  collect-envs:
    name: Collect environments
    needs:
      - detect-changes
    if: needs.detect-changes.outputs.changes == 'true'
    runs-on: ubuntu-22.04
    outputs:
      envs: ${{ steps.collect-envs.outputs.envs }}
    steps:
      - name: Collect environments
        id: collect-envs
        shell: bash
        run: |
          ALL_ENVS=$(find clusters -name spec.json -exec dirname {} \; | sort -u | jq -R . | jq -s .)
          OUTPUT=$(echo $ALL_ENVS | jq --raw-output -c 'map(. |= split("/") | { "cluster": .[1], "env": .[2]})')
          echo "envs=${OUTPUT}" >> $GITHUB_OUTPUT

  compile:
    name: Compile
    needs:
      - collect-envs
    if: needs.collect-envs.outputs.envs != ''
    strategy:
      matrix:
        cluster:
          ["${{ fromJson(needs.collect-envs.outputs.envs) }}"]
      fail-fast: false
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: clusters/
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
      - name: Compile Kubernetes manifests
        uses: ./.github/actions/compile-environment
        with:
          cluster: ${{ matrix.cluster.cluster }}
          env: ${{ matrix.cluster.env }}
      - name: Push manifests
        run: |
          git config --global user.name "actions[bot]"
          git config --global user.email "actions@colorful-pandas.com"
          # NOTE: this might lead to race conditions if multiple environments are updated at once
          git pull --ff-only
          git add ${{ matrix.cluster.cluster}}/compiled/${{ matrix.cluster.env }}/
          git diff --quiet && git diff --staged --quiet || git commit -m "Update cluster manifests for ${{ matrix.cluster.cluster}}/${{ matrix.cluster.env }}"
          git push
