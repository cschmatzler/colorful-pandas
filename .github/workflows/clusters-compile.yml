name: "Clusters: Compile manifests"
on:
  push:
    branches:
      - main
    paths:
      - clusters/**
      - "!clusters/**/compiled"

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  detect-changes:
    name: Detect changed files
    runs-on: ubuntu-22.04
    outputs:
      changes: ${{ steps.changes.outputs.tanka }}
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3

      - name: Check for file changes
        uses: dorny/paths-filter@4512585405083f25c027a35db413c2b3b9006d50 # v2.11.1
        id: changes
        with:
          list-files: json
          filters: .github/filters.yml

  collect-envs:
    name: Collect environments
    needs:
      - detect-changes
    if: needs.detect-changes.outputs.changes == 'true'
    runs-on: ubuntu-22.04
    outputs:
      envs: ${{ steps.collect-envs.outputs.envs }}
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3

      - name: Collect environments
        id: collect-envs
        shell: bash
        run: |
          ALL_ENVS=$(find clusters -name spec.json -exec dirname {} \; | sort -u | jq -R . | jq -s .)
          OUTPUT=$(echo $ALL_ENVS | jq --raw-output -c 'map(. |= split("/") | { "cluster": .[1], "env": .[2]})')
          echo "envs=${OUTPUT}" >> $GITHUB_OUTPUT

  compile:
    name: Compile
    needs:
      - collect-envs
    if: needs.collect-envs.outputs.envs != ''
    strategy:
      matrix:
        cluster: ["${{ fromJson(needs.collect-envs.outputs.envs) }}"]
      fail-fast: false
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3

      - name: Get tool versions
        id: tool-versions
        run: |
          echo "tanka-version=$(awk '/^tanka / { print $2 }' .tool-versions)" >> $GITHUB_OUTPUT
          echo "helm-version=$(awk '/^helm / { print $2 }' .tool-versions)" >> $GITHUB_OUTPUT

      - name: Compile Kubernetes manifests
        uses: ./.github/actions/compile-environment
        with:
          cluster: ${{ matrix.cluster.cluster }}
          env: ${{ matrix.cluster.env }}
          tanka-version: ${{ steps.tool-versions.outputs.tanka-version }}
          helm-version: ${{ steps.tool-versions.outputs.helm-version }}

  push:
    name: Push manifests
    needs:
      - compile
    runs-on: ubuntu-22.04
    steps:
      - name: Get app token
        id: get_token
        uses: tibdex/github-app-token@b62528385c34dbc9f38e5f4225ac829252d1ea92 # v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_KEY }}

      - name: Checkout
        uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 # v3
        with:
          token: ${{ steps.get_token.outputs.token }}

      - name: Download manifests
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3

      - name: Move artifacts into the correct directory
        run: |
          for dir in manifests-*; do
            [[ -d $dir ]] || continue
            cluster=${dir#manifests-}
            env=${cluster#*-}
            cluster=${cluster%%-*}
            rm -rf clusters/$cluster/compiled/$env
            mkdir -p clusters/$cluster/compiled/$env
            mv $dir/* clusters/$cluster/compiled/$env
          done

      - name: Push manifests
        run: |
          git config --global user.name "astronaut-panda[bot]"
          git config --global user.email "137164246+astronaut-panda[bot]@users.noreply.github.com"
          git add clusters/**/compiled
          git pull --ff-only
          git diff --quiet && git diff --staged --quiet || git commit -m "Update cluster manifests"
          git push
