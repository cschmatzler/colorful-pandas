VERSION 0.7

ARG --global ELIXIR_BASE=hexpm/elixir:1.15.2-erlang-26.0.2-debian-bookworm-20230612-slim
ARG --global DEPLOY_BASE=debian:bookworm-20230612-slim

setup-base:
  FROM $ELIXIR_BASE

  RUN apt-get update && apt-get upgrade -y && \
    apt-get install --no-install-recommends -y \
        build-essential git jq postgresql-client python3 && \
    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false && \
    apt-get clean -y && \
    rm -rf /var/lib/apt/lists/*

  ENV ELIXIR_ASSERT_TIMEOUT=10000

  WORKDIR /colorful-pandas

  COPY mix.exs .
  COPY mix.lock .
  RUN mix local.rebar --force
  RUN mix local.hex --force
  RUN mix deps.get

compile:
  FROM +setup-base

  ARG ENV=test
  ENV MIX_ENV=$ENV

  RUN mix deps.compile
  COPY --dir config lib ./

  RUN mix compile --warnings-as-errors

test:
  FROM +compile --ENV=test

  COPY docker-compose.test.yml .
  COPY --dir priv test .

  WITH DOCKER --compose docker-compose.test.yml
    RUN while ! pg_isready --host=localhost --port=5432 --username=postgres; do sleep 1; done ;\
      mix ecto.create && \
      mix ecto.migrate && \
      mix test
  END

lint:
  FROM +compile --ENV=test

  COPY .credo.exs .formatter.exs .sobelow-conf .

  RUN mix deps.unlock --check-unused
  RUN mix hex.audit
  RUN mix format --check-formatted
  RUN mix credo
  RUN mix excellent_migrations.check_safety
  RUN mix sobelow --config

release:
  FROM +compile --ENV=prod

  COPY --dir assets rel priv .

  RUN mix tailwind.install --if-missing
  RUN mix esbuild.install --if-missing
  RUN mix tailwind default --minify
  RUN mix esbuild default --minify
  RUN mix phx.digest
  RUN mix release colorful_pandas

  SAVE ARTIFACT _build/prod/rel/colorful_pandas

deploy:
  ARG --required VERSION

  FROM $DEPLOY_BASE

  RUN apt-get update && apt-get upgrade -y && \
    apt-get install --no-install-recommends -y \
        ca-certificates locales openssl && \
    apt-get purge -y --auto-remove -o APT::AutoRemove::RecommendsImportant=false && \
    apt-get clean -y && \
    rm -rf /var/lib/apt/lists/*

  RUN sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen && locale-gen

  ENV LANG=en_US.UTF-8
  ENV LANGUAGE=en_US:en
  ENV LC_ALL=en_US.UTF-8

  WORKDIR /colorful-pandas

  COPY +release/colorful_pandas .

  CMD ["/colorful-pandas/bin/server"]

  SAVE IMAGE ghcr.io/panda-den/colorful-pandas:$VERSION

update-buildcache:
  BUILD +test
  BUILD +lint
  BUILD +release
