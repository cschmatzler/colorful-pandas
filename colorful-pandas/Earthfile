VERSION 0.7

ARG --global ELIXIR_BASE=hexpm/elixir:1.15.2-erlang-26.0.2-alpine-3.18.2
ARG --global DEPLOY_BASE=alpine:3.18.2

setup-base:
  FROM $ELIXIR_BASE

  RUN apk add --no-cache build-base git

  WORKDIR /colorful-pandas

  RUN mix do local.rebar --force, \
             local.hex --force

deps:
  FROM +setup-base

  COPY mix.exs mix.lock .
  RUN mix deps.get

  SAVE ARTIFACT /colorful-pandas/deps AS LOCAL deps

compile:
  FROM +deps

  ARG ENV=test
  ENV MIX_ENV=$ENV

  RUN mix deps.compile

  COPY --dir config lib ./
  RUN mix compile --warnings-as-errors

  SAVE ARTIFACT _build/$ENV AS LOCAL _build/$ENV

test-image:
  FROM +compile --ENV=test

  ENV ELIXIR_ASSERT_TIMEOUT=10000

  COPY --dir priv test .

test:
  FROM earthly/dind:alpine

  RUN apk add postgresql-client

  COPY docker-compose.test.yml .
  WITH DOCKER \
      --compose docker-compose.test.yml \
      --load colorful-pandas:latest=+test-image
    RUN while ! pg_isready --host=localhost --port=5432 --username=postgres; do sleep 1; done ;\
      docker run --network host colorful-pandas sh -c "mix ecto.create && mix ecto.migrate && mix test"
  END

lint:
  FROM +compile --ENV=test

  COPY .credo.exs .formatter.exs .sobelow-conf .
  RUN mix deps.unlock --check-unused
  RUN mix hex.audit
  RUN mix format --check-formatted
  RUN mix credo
  RUN mix excellent_migrations.check_safety
  RUN mix sobelow --config

release:
  ARG ENV=prod

  FROM +compile --ENV=$ENV

  COPY --dir assets priv .
  RUN mix do tailwind.install --if-missing, \
              esbuild.install --if-missing
  RUN mix do tailwind default --minify, \
            esbuild default --minify, \
            phx.digest

  COPY --dir rel .
  RUN mix release colorful_pandas

  SAVE ARTIFACT _build/$ENV/rel/colorful_pandas AS LOCAL _build/$ENV/rel/colorful_pandas

deploy:
  ARG --required VERSION

  FROM $DEPLOY_BASE

  RUN apk add --no-cache libstdc++ ncurses openssl && \
    adduser --system --shell /bin/false --home /opt/colorful-pandas colorful-pandas

  WORKDIR /opt/colorful-pandas
  USER colorful-pandas

  COPY --chown=colorful-pandas:0 +release/colorful_pandas .

  CMD ["/opt/colorful-pandas/bin/server"]

  SAVE IMAGE --push ghcr.io/panda-den/colorful-pandas:$VERSION
